module.exports = {
    // parse an ODBC or ADO.NET connection string into
    parse: function (connectionString) {
        var properties = parseProperties(connectionString);
        return {
            provider: 'sql',
            user: properties['user id'] || properties['uid'],
            password: properties['password'] || properties['pwd'],
            server: parseServer(properties['server']),
            port: parsePort(properties['server']),
            database: properties['database'],
            connectionTimeout: (parseInt(properties['connection timeout']) * 1000) || 15000,
            options: {
                encrypt: parseBoolean(properties['encrypt'])
            }
        };

        function parseServer(value) {
            var start = value.indexOf(':'),
                end = value.lastIndexOf(',');
            return value.substring(start + 1, end === -1 ? undefined : end);
        }

        function parsePort(value) {
            var start = value.lastIndexOf(',');
            return start === -1 ? undefined : parseInt(value.substring(start + 1));
        }

        function parseBoolean(value) {
            value = value && value.toLowerCase();
            return !!(value === 'true' || value === 'yes');
        }

        function parseProperties(source) {
            return source.split(';').reduce(function (properties, property) {
                var keyValue = property.split('='),
                    key = keyValue[0].toLowerCase(),
                    value = keyValue.length > 1 && keyValue[1];

                if(key)
                    properties[key] = value;

                return properties;
            }, {});
        }
    }
};
