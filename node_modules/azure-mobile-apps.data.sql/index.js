var statements = require('./statements'),
    execute = require('./execute'),
    dynamicSchema = require('./dynamicSchema');

module.exports = function (configuration) {
    var tableAccess = function (table) {
        // default is on...
        if (table.dynamicSchema === undefined || table.dynamicSchema)
            return {
                read: function (query) {
                    return dynamicSchema(configuration).read(table, statements.read(query));
                },
                update: function (item) {
                    return dynamicSchema(configuration).execute(table, statements.update(table, item), item);
                },
                insert: function (item) {
                    return dynamicSchema(configuration).execute(table, statements.insert(table, item), item);
                },
                delete: function (id, version) {
                    return execute(configuration, statements.delete(table, id, version));
                },
                truncate: function () {
                    return execute(configuration, statements.truncate(table));
                }
            };
        else
            return {
                read: function (query) {
                    return execute(configuration, statements.read(query));
                },
                update: function (item) {
                    return execute(configuration, statements.update(table, item));
                },
                insert: function (item) {
                    return execute(configuration, statements.insert(table, item));
                },
                delete: function (id, version) {
                    return execute(configuration, statements.delete(table, id, version));
                },
                truncate: function () {
                    return execute(configuration, statements.truncate(table));
                }
            };
    };

    // expose a method to allow direct execution if SQL queries
    tableAccess.execute = function (statement) {
        return execute(configuration, statement);
    };

    return tableAccess;
};
