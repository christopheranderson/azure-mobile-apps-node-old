var helpers = require('../helpers');

module.exports = function (tableConfig, item) {
    var tableName = helpers.formatTableName(tableConfig.schema || 'dbo', tableConfig.name),
        pkName = 'PK_' + tableConfig.name,
        pkType = tableConfig.autoIncrement ? 'INT' : helpers.getSqlType((item.id === undefined || item.id === null) ? '' : item.id, true),
        pkColumnSql = '[id] ' + pkType + ' NOT NULL' + (tableConfig.autoIncrement ? ' IDENTITY (1, 1)' : ''),
        properties = Object.keys(item),
        columnSql = properties.reduce(function (sql, property) {
            if(property !== 'id')
                sql.push('[' + property + '] ' + helpers.getSqlType(item[property]) + ' NULL');
            return sql;
        }, [pkColumnSql]).join(',');
        // 900 bytes is the maximum length for a primary key - http://stackoverflow.com/questions/10555642/varcharmax-column-not-allowed-to-be-a-primary-key-in-sql-server

    return {
        sql: 'CREATE TABLE ' + tableName + ' (' + columnSql + ') ON [PRIMARY]; ALTER TABLE ' + tableName + ' ADD CONSTRAINT ' + pkName + ' PRIMARY KEY CLUSTERED (id) ON [PRIMARY]'
    };
};
