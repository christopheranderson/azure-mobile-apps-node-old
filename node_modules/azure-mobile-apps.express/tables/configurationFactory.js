var middlewareFactory = require('./middlewareFactory'),
    executeOperation = require('../middleware/executeOperation'),
    express = require('express');

module.exports = function () {
    // "default" configuration
    var router = express.Router(),
        configuration = {
            middleware: { },
            operation: { }
        };
    
    var factory = function (tableName) {
        configuration.name = tableName;
        return middlewareFactory(configuration, router);
    };
    
    factory.execute = router;
    factory.operation = executeOperation;
    
    factory.use = attachMiddleware('execute');
    factory.use.read = attachMiddleware('get');
    factory.use.update = attachMiddleware('patch');
    factory.use.insert = attachMiddleware('post');
    factory.use.delete = attachMiddleware('delete');

    factory.read = attachOperation('get');
    factory.update = attachOperation('patch');
    factory.insert = attachOperation('post');
    factory.delete = attachOperation('delete');
    
    return factory;
    
    function attachMiddleware(verb) {
        return function (middleware) {
            configuration.middleware[verb] = configuration.middleware[verb] || [];
            Array.prototype.push.apply(configuration.middleware[verb], arguments);
        }
    }

    function attachOperation(verb) {
        return function (handler) {
            configuration.operation[verb] = handler;
        }
    }
}
