var middlewareFactory = require('./middlewareFactory.js');

module.exports = function () {
    // "default" configuration
    var configuration = {
        middleware: [execute],
        read: [operation],
        update: [operation],
        insert: [operation],
        delete: [operation]
    };
    
    var factory = function () {
        return middlewareFactory(configuration);
    };
    
    factory.execute = execute;
    factory.operation = operation;
    factory.use = attachMiddleware('middleware');
    factory.use.read = attachMiddleware('read');
    factory.use.update = attachMiddleware('update');
    factory.use.insert = attachMiddleware('insert');
    factory.use.delete = attachMiddleware('delete');
    
    return factory;
    
    // middleware to be added to indicate when table operation should execute as part of global table flow
    function execute(req, res, next) {

    }
    
    // middleware to be added to indicate when table operation should execute as part of specific table operation flow
    function operation(req, res, next) {

    }

    function attachMiddleware(property) {
        return function (middleware) {
            configuration[property] = Array.prototype.slice.call(arguments);
        }
    }
}
