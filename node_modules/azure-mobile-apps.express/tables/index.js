var loader = require('azure-mobile-apps.core/configuration/loader'),
    data = require('azure-mobile-apps.core/data'),
    configurationFactory = require('./configuration'),
    tableRouter = require('./tableRouter');

module.exports = function (configuration) {
    configuration.tables = configuration.tables || {};

    var router = tableRouter(),
        middleware = function (req, res, next) {
            // initialise the azureMobile context variable with our configured data provider
            // if other features use this, then it should be moved higher in the stack
            req.azureMobile = { data: data.create(configuration) };

            router(req, res, next);
        };

    // allow configuration of a table by zumoInstance.tables.add('table')
    middleware.add = function (name, definition) {
        definition = definition || configurationFactory();
        configuration.tables[name] = definition;
        router.add(name, definition);
    };

    // allow configuration of tables by zumoInstance.tables.import('path/to/config')
    middleware.import = function (path) {
        var tables = loader.loadPath(path, configuration.basePath);
        Object.keys(tables).forEach(function (tableName) {
            middleware.add(tableName, tables[tableName]);
        });
    };

    middleware.stack = router.stack;

    // expose configuration through zumoInstance.tables.configuration
    middleware.configuration = configuration.tables;

    return middleware;
}
