var express = require('express'),
    parseQuery = require('../middleware/parseQuery'),
    parseItem = require('../middleware/parseItem'),
    renderResults = require('../middleware/renderResults'),
    authorise = require('../middleware/authorise');

module.exports = function (configuration, router, executeOperation) {
    // add operation specific middleware configured by the user
    configureOperation('get', [authorise(configuration), parseQuery(configuration)], [renderResults]);
    configureOperation('post', [authorise(configuration), parseItem(configuration)], [renderResults]);
    configureOperation('patch', [authorise(configuration), parseItem(configuration)], [renderResults]);
    configureOperation('delete', [authorise(configuration), parseQuery(configuration)], [renderResults]);

    // return table specific middleware configured by the user - if no execute middleware has been configured, just return the router we configured
    return !configuration.middleware.execute || configuration.middleware.execute.length === 0
        ? [router]
        : configuration.middleware.execute;

    function configureOperation(verb, pre, post) {
        var operationMiddleware = configuration.middleware[verb] || [],
            // if no middleware has been configured, just use the executeOperation middleware
            middleware = operationMiddleware.length === 0
                ? [executeOperation]
                : operationMiddleware;

        if (pre) middleware.unshift.apply(middleware, pre);
        if (post) middleware.push.apply(middleware, post);

        router[verb]('/' + configuration.name + '/:id', middleware);
        router[verb]('/' + configuration.name, middleware);
    }
};
