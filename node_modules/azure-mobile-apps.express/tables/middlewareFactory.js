var express = require('express'),
    parseQuery = require('../middleware/parseQuery'),
    parseItem = require('../middleware/parseItem'),
    executeOperation = require('../middleware/executeOperation'),
    attachProperty = require('../middleware/attachRequestProperty'),
    renderResults = require('../middleware/renderResults');

// generates the set of middleware from specified configuration to handle requests for this table
module.exports = function (configuration, router) {
    configureOperation('get', [parseQuery], [renderResults]);
    configureOperation('post', [parseItem], [renderResults]);
    configureOperation('patch', [parseItem], [renderResults]);
    configureOperation('delete', [parseQuery]);
    
    // if no execute middleware has been configured, just use the router we configured    
    var tableMiddleware = !configuration.middleware.execute || configuration.middleware.execute.length === 0 
        ? [router]
        : configuration.middleware.execute;
    
    // include middleware to attach table operations to request object and render the results
    tableMiddleware.unshift(attachProperty('_table', configuration));

    return tableMiddleware;

    function configureOperation(verb, pre, post) {
        var operationMiddleware = configuration.middleware[verb] || [],
            // if no middleware has been configured, just use the executeOperation middleware
            middleware = operationMiddleware.length === 0 
                ? [executeOperation] 
                : operationMiddleware;
        
        if (pre) middleware.unshift.apply(middleware, pre);
        if (post) middleware.push.apply(middleware, post);

        router[verb]('/', middleware);
    }
}
