var expect = require('chai').expect,
    supertest = require('supertest-as-promised'),
    express = require('express'),
    mobileApps = require('azure-mobile-apps.express'),
    secret = 'secret', // token and secret are taken directly from http://jwt.io/
    token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ2ZXIiOiIzIiwidWlkIjoiRmFjZWJvb2s6c29tZXVzZXJpZEBob3RtYWlsLmNvbSIsImlzcyI6InVybjptaWNyb3NvZnQ6d2luZG93cy1henVyZTp6dW1vIiwiYXVkIjoidXJuOm1pY3Jvc29mdDp3aW5kb3dzLWF6dXJlOnp1bW8iLCJleHAiOjE0NDAwMDk0MjQsIm5iZiI6MTQzNzQxNzQyNH0.9EvyzV53b2SkBCc46GR4N77NU-3SJEuYzQl8lmlp7QY',

    app, mobileApp;

// the default configuration uses the in-memory data provider - it does not (yet) support queries
describe('azure-mobile-apps.express.integration.authenticate', function () {
    beforeEach(function () {
        app = express();
        mobileApp = mobileApps({ auth: { secret: secret } });
    });

    it('returns 200 for table requests with valid auth token', function () {
        mobileApp.tables.add('todoitem');
        mobileApp.attach(app);

        return supertest(app)
            .get('/tables/todoitem')
            .set('x-zumo-auth', token)
            .expect(200);
    });

    it('returns 200 for table requests with no auth token', function () {
        mobileApp.tables.add('todoitem');
        mobileApp.attach(app);

        return supertest(app)
            .get('/tables/todoitem')
            .expect(200);
    });

    it('returns 401 for table requests with invalid auth token', function () {
        mobileApp.tables.add('todoitem');
        mobileApp.attach(app);

        return supertest(app)
            .get('/tables/todoitem')
            .set('x-zumo-auth', 'invalid token')
            .expect(401);
    });
});
