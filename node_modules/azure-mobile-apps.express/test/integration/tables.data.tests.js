var expect = require('chai').expect,
    supertest = require('supertest-as-promised'),
    express = require('express'),
    mobileApps = require('azure-mobile-apps.express'),
    data = require('azure-mobile-apps.data.sql'),

    app, mobileApp;

describe('azure-mobile-apps.express.integration.tables.data', function () {
    var config = {
        provider: 'sql',
        user: 'azure-mobile-apps-test',
        password: 'Blah1234',
        server: 'localhost',
        database: 'azure-mobile-apps-test'
    };

    beforeEach(function (done) {
        app = express();
        mobileApp = mobileApps({ data: config });
        data(config).truncate({ name: 'integration' }).then(done);
    });

    it('inserted records are returned', function () {
        mobileApp.tables.add('integration');
        mobileApp.attach(app);

        return supertest(app)
            .post('/tables/integration')
            .send({ id: 1, string: "test", bool: true, number: 1 })
            .expect(200)
            .then(function (res) {
                return supertest(app)
                    .get('/tables/integration')
                    .expect(200);
            })
            .then(function (res) {
                expect(res.body).to.deep.equal([{ id: 1, string: "test", bool: true, number: 1 }]);
            });
    });

    it('updated records are returned', function () {
        mobileApp.tables.add('integration');
        mobileApp.attach(app);

        return supertest(app)
            .post('/tables/integration')
            .send({ id: 1, string: "test" })
            .then(function (res) {
                return supertest(app)
                    .patch('/tables/integration')
                    .send({ id: 1, string: "test2", bool: true, number: 1 })
            })
            .then(function (res) {
                return supertest(app).get('/tables/integration');
            })
            .then(function (res) {
                expect(res.body).to.deep.equal([{ id: 1, string: "test2", bool: true, number: 1 }]);
            });
    });

    it('deleted records are not returned', function () {
        mobileApp.tables.add('integration');
        mobileApp.attach(app);

        return supertest(app)
            .post('/tables/integration')
            .send({ id: 1, string: "test" })
            .expect(200)
            .then(function (res) {
                return supertest(app)
                    .delete('/tables/integration/1')
                    .expect(200);
            })
            .then(function (res) {
                return supertest(app).get('/tables/integration');
            })
            .then(function (res) {
                expect(res.body).to.deep.equal([]);
            });

    });
});
