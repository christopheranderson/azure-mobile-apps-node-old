var expect = require('chai').expect,
    supertest = require('supertest-as-promised'),
    express = require('express'),
    mobileApps = require('azure-mobile-apps.express'),

    app, mobileApp;

describe('azure-mobile-apps.express.integration.tables.data', function () {
    beforeEach(function () {
        app = express();
        mobileApp = mobileApps({

        });
    });

    it('inserted records are returned', function () {
        mobileApp.tables.add('todoitem');
        mobileApp.attach(app);

        return supertest(app)
            .post('/tables/todoitem')
            .send({ id: 1, value: "test" })
            .expect(200)
            .then(function (res) {
                return supertest(app)
                    .get('/tables/todoitem')
                    .expect(200);
            })
            .then(function (res) {
                expect(res.body).to.deep.equal([{ id: 1, value: "test" }]);
            });
    });

    it('updated records are returned', function () {
        mobileApp.tables.add('todoitem');
        mobileApp.attach(app);

        return supertest(app)
            .post('/tables/todoitem')
            .send({ id: 1, value: "test" })
            .then(function (res) {
                return supertest(app)
                    .patch('/tables/todoitem')
                    .send({ id: 1, value: "test2" })
            })
            .then(function (res) {
                return supertest(app)
                    .get('/tables/todoitem')
            })
            .then(function (res) {
                expect(res.body).to.deep.equal([{ id: 1, value: "test2" }]);
            });
    });

    it('deleted records are not returned', function () {
        mobileApp.tables.add('todoitem');
        mobileApp.attach(app);

        return supertest(app)
            .post('/tables/todoitem')
            .send({ "id": 1, "value": "test" })
            .expect(200)
            .then(function (res) {
                return supertest(app)
                    .delete('/tables/todoitem/1')
                    .expect(200);
            })
            .then(function (res) {
                expect(res.body).to.deep.equal(1);
            });
    });
});
