var expect = require('chai').expect,
    supertest = require('supertest-as-promised'),
    express = require('express'),
    mobileApps = require('azure-mobile-apps.express'),
    data = require('azure-mobile-apps.data.sql'),
    config = require('../infrastructure/config').data(),

    app, mobileApp;

describe('azure-mobile-apps.express.integration.tables.dynamicSchema', function () {
    beforeEach(function () {
        app = express();
        mobileApp = mobileApps({ data: config });
    });

    afterEach(function (done) {
        data(config).execute({ sql: 'drop table dynamic' }).then(done, done);
    });

    it('creates table and returns inserted records', function () {
        mobileApp.tables.add('dynamic');
        mobileApp.attach(app);

        return supertest(app)
            .post('/tables/dynamic')
            .send({ id: '1', string: 'test', bool: true, number: 1 })
            .expect(200)
            .then(function (res) {
                return supertest(app)
                    .get('/tables/dynamic')
                    .expect(200);
            })
            .then(function (res) {
                expect(res.body).to.deep.equal([{ id: '1', string: 'test', bool: true, number: 1 }]);
            });
    });

    it('updates table schema', function () {
        mobileApp.tables.add('dynamic');
        mobileApp.attach(app);

        return supertest(app)
            .post('/tables/dynamic')
            .send({ id: '1', string: 'one' })
            .then(function () {
                return supertest(app)
                    .post('/tables/dynamic')
                    .send({ id: '2', string: 'two', bool: false, number: 2 });
            })
            .then(function () {
                return supertest(app).get('/tables/dynamic');
            })
            .then(function (res) {
                expect(res.body).to.deep.equal([
                    { id: '1', string: 'one', bool: null, number: null },
                    { id: '2', string: 'two', bool: false, number: 2 }
                ]);
            });
    });

    it('creates table with numeric id and returns inserted records', function () {
        mobileApp.tables.add('dynamic');
        mobileApp.attach(app);

        return supertest(app)
            .post('/tables/dynamic')
            .send({ id: 1, string: 'test', bool: true, number: 1 })
            .expect(200)
            .then(function (res) {
                return supertest(app)
                    .get('/tables/dynamic')
                    .expect(200);
            })
            .then(function (res) {
                expect(res.body).to.deep.equal([{ id: 1, string: 'test', bool: true, number: 1 }]);
            });
    });
});
