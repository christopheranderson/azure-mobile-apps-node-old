var expect = require('chai').expect,
    request = require('supertest-as-promised'),
    config = require('../infrastructure/config')(),
    app = require('express')(),
    mobileApp = require('azure-mobile-apps.express')(config),
    data = require('azure-mobile-apps.data.sql'),
    config = require('../infrastructure/config').data();

describe('azure-mobile-apps.express.integration.endtoend', function () {
    afterEach(function (done) {
        data(config).execute({ sql: 'drop table endtoend' }).then(done, function () { done() });
    });

    it('import, initialise, persist and query with custom middleware and operations', function () {
        mobileApp.tables.import('../files/tables/endtoend');
        mobileApp.attach(app);

        return request(app)
            .post('/tables/endtoend')
            .send({ id: '1', string: 'test', bool: true, number: 1 })
            .then(function (res) {
                return request(app).get('/tables/endtoend');
            })
            .then(function (res) {
                expect(res.body).to.deep.equal([{ id: '1', string: 'test', bool: true, number: 1, insertOperation: 'insert', insertMiddleware: 'insert', readOperation: 'read', readMiddleware: 'read' }]);
            });
    });
});
