var expect = require('chai').expect,
    supertest = require('supertest'),
    express = require('express'),
    mobileApps = require('azure-mobile-apps.express'),

    app, mobileApp;

describe('azure-mobile-apps.express.integration.tables', function () {
    beforeEach(function () {
        app = express();
        mobileApp = mobileApps();
    });    

    it('returns 200 for table route', function (done) {
        mobileApp.tables.add('todoitem');
        mobileApp.attach(app);
        
        supertest(app)
            .get('/tables/todoitem')
            .expect(200)
            .end(done);
    });

    it('returns 200 for table route with id parameter', function (done) {
        mobileApp.tables.add('todoitem');
        mobileApp.attach(app);
        
        supertest(app)
            .get('/tables/todoitem/id')
            .expect(200)
            .end(done);
    });
    
    it('returns 404 for tables that are not registered', function (done) {
        mobileApp.tables.add('todoitem');
        mobileApp.attach(app);
        
        supertest(app)
            .get('/tables/todoitem2')
            .expect(404)
            .end(done);
    });

    it('executes user code when provided', function (done) {
        var table = mobileApp.table();
        table.read(function (query, context) {
            return 'function executed';
        });
        mobileApp.tables.add('todoitem', table);
        mobileApp.attach(app);

        supertest(app)
            .get('/tables/todoitem')
            .end(function (err, res) {
                expect(res.body.indexOf('function executed')).to.not.equal(-1);
                done();
            });
    });

    it('executes custom middleware', function (done) {
        var table = mobileApp.table(),
            value;

        table.use.read([function (req, res, next) {
            value = 'test';
            next();
        }]);
        mobileApp.tables.add('todoitem', table);
        mobileApp.attach(app);
        
        supertest(app)
            .get('/tables/todoitem')
            .end(function (err, res) {
                expect(value).to.equal('test');
                done();
            });
    });

    it('uses custom root path', function (done) {
        mobileApp = mobileApps({ tableRootPath: '/test' });
        mobileApp.tables.add('todoitem');
        mobileApp.attach(app);
        
        supertest(app)
            .get('/test/todoitem')
            .expect(200)
            .end(done);
    });
})
