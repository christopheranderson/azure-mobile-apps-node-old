var configurationFactory = require('azure-mobile-apps.express/tables/configurationFactory'),
    executeOperation = require('azure-mobile-apps.express/middleware/executeOperation'),
    expect = require('chai').expect,
    express = require('express');

describe('azure-mobile-apps.express.tables.configurationFactory', function () {
    it('generates specified middleware stack for overall execution', function () {
        var factory = configurationFactory();
        factory.use(testMiddleware);
        factory.use(testMiddleware);
        var result = factory();

        expect(result.length).to.equal(3);
        expect(result[1]).to.equal(testMiddleware);
        expect(result[2]).to.equal(testMiddleware);
    });
    
    it('generates default middleware stack for overall execution', function () {
        var stack = configurationFactory()();
        expect(stack.length).to.equal(2);
        expect(stack[1].handle).to.equal(express.Router().handle);
        expect(stack[1].stack.length).to.equal(4);        
        expect(stack[1].stack[0].route.stack.length).to.equal(3);
    });
    
    it('generates middleware stack for individual operations', function () {
        var factory = configurationFactory();
        factory.use.read(testMiddleware);
        factory.use.read(testMiddleware);

        var stack = factory();
        expect(stack[1].stack[0].route.stack.length).to.equal(4);
        expect(stack[1].stack[0].route.stack[1].handle).to.equal(testMiddleware);
        expect(stack[1].stack[0].route.stack[2].handle).to.equal(testMiddleware);
    });
    
    it('generates default middleware stack for individual operations', function () {
        var stack = configurationFactory()();
        expect(stack[1].stack[0].route.stack.length).to.equal(3);
        expect(stack[1].stack[0].route.stack[1].handle).to.equal(executeOperation);
    });

    function testMiddleware(req, res, next) { }
});
